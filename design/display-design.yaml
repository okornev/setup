variables:

platforms:
# links to
  adapter:
    pack: oneops/tomcat:1
  antenna:
    pack: oneops/tomcat:1
  daq:
    pack: oneops/tomcat:1
  sensor:
    pack: oneops/tomcat:1
  transistor:
    pack: oneops/tomcat:1

  displaydb:
    pack: oneops/postgresql:1
    major_version: 1

    variables:
      artifact-dir: /opt/oneops/display
      home-dir: $OO_GLOBAL{INSTALL-DIR}
      version: $OO_GLOBAL{VERSION}

    components:
      secgroup/oneops.1.Secgroup:
        secgroup:
          inbound:
            - '22 22 tcp 0.0.0.0/0'
            - '5432 5432 tcp 0.0.0.0/0'

      compute/oneops.1.Compute:
        compute:
          size: M
          ostype: centos-7.2

      library/oneops.1.Library:
        library:
          packages:
            - gcc-c++
            - postgresql-libs
            - zlib
            - graphviz

      user/oneops.1.User:
        ooadmin:
          username: ooadmin
          home_directory: /home/ooadmin

      postgresql/oneops.1.Postgresql:
        postgresql:
          version: 9.2
          postgresql_conf:
            tcp_keepalives_count: 5
            tcp_keepalives_idle: 60
            tcp_keepalives_interval: 5
            max_connections: 500

      database/oneops.1.Database:
        database:
          dbname: $OO_GLOBAL{DISPLAY-DB-NAME}
          username: $OO_GLOBAL{DISPLAY-DB-USERNAME}
          password: 'changeme'

      artifact/oneops.1.Artifact:
        display:
          repository: releases
          install_dir: $OO_LOCAL{artifact-dir}
          location: $OO_GLOBAL{DISTBASE}/oneops-display-$OO_LOCAL{version}.tar.gz
          version: $OO_LOCAL{version}
          restart: |-
            home_dir = "$OO_LOCAL{home-dir}"
            base_dir = "#{home_dir}/display"
            dist_dir = "#{home_dir}/dist"

            execute "mkdir -p #{home_dir}"
            execute "rm -fr #{dist_dir}"
            execute "ln -sf $OO_LOCAL{artifact-dir}/releases/$OO_LOCAL{version}/oneops/dist #{dist_dir}"
            execute "rm -fr #{base_dir}"
            execute "mkdir -p #{base_dir}"

            execute 'extract' do
              command "tar zxf #{dist_dir}/app.tar.gz --no-same-owner --no-same-permissions"
              cwd "#{base_dir}"
            end

            bash 'db:migrate' do
              code <<-EOA
                is_standby=`sudo -u postgres psql -t -c "SELECT pg_is_in_recovery();"|xargs`
                echo "is_standby=$is_standby"
                if [ $is_standby = "t" ]; then
                  echo "skipping migration (or schema load) because this is slave"
                  exit
                fi

                bundle config build.pg --with-pg-config=`find / -name pg_config |tail -1`
                bundle install --local --without development
                bundle exec rake db:create
                bundle exec rake db:migrate
              EOA

              environment({'RAILS_ENV' => "$OO_GLOBAL{DISPLAY-RAILS-ENV}",
                           'OODB_HOST' => "localhost",
                           'OODB_DATABASE' => "$OO_GLOBAL{DISPLAY-DB-NAME}",
                           'OODB_USERNAME' => "$OO_GLOBAL{DISPLAY-DB-USERNAME}",
                           'OODB_PASSWORD' => "$OO_GLOBAL{DISPLAY-DB-PASSWORD}"})
              cwd "#{base_dir}"
            end

      lb/oneops.1.Lb:
        lb:
         listeners:
           - tcp 5432 tcp 5432
         ecv_map:
            '5432': GET /NOTUSED


  display:
    pack: oneops/rails:1
    major_version: 1

    variables:
      artifact-dir: /opt/oneops/display
      home-dir: $OO_GLOBAL{INSTALL-DIR}
      version: $OO_GLOBAL{VERSION}
      instances: '16'
      hostname:
      display-db-host: displaydb
      run-user: display
      ldap-config:

      cms-site: http://cmsapi:8080/
      transistor-site: http://transistor:8080/
      metrics-site: http://daq:8080/
      events-site: http://sensor:8080/
      notifications-site: http://antenna:8080/
      search-site: http://search:9200/
      log-site: http://eslogs:9200/

      asset-url:

      feedback-url:
      help-url:
      news-url:
      privacy-policy-url:
      report-problem-url:
      support-chat-url:
      terms-of-service-url: http://www.oneops.com/legal/terms

      session-inactivity-timeout: '30'

      support-auth: oneops
      support-email: support@oneops.com

    links:
      - displaydb
      - adapter
      - transistor
      - sensor
      - antenna
      - daq

    components:
      secgroup/oneops.1.Secgroup:
        secgroup:
          inbound:
            - '22 22 tcp 0.0.0.0/0'
            - '443 443 tcp 0.0.0.0/0'

      compute/oneops.1.Compute:
        compute:
          size: S
          ostype: centos-7.2

      library/oneops.1.Library:
        library:
          packages:
            - gcc-c++
            - postgresql-libs
            - postgresql-devel
            - zlib
            - graphviz

      user/oneops.1.User:
        ooadmin:
          username: ooadmin
          home_directory: /home/ooadmin
        display:
          username: display
          home_directory: /home/display

      apache/oneops.1.Apache:
        apache:
          extra: |-
            SetOutputFilter DEFLATE
            AddOutputFilterByType DEFLATE text/html text/plain text/xml text/javascript
          ports:
            - 80
            - 443
          user: $OO_LOCAL{run-user}
          modules:
            - mod_log_config
            - mod_mime
            - mod_dir
            - mod_status
            - mod_alias
            - mod_auth_basic
            - mod_authz_host
            - mod_proxy
            - mod_proxy_balancer
            - mod_proxy_http
            - mod_rewrite
            - mod_headers
            - mod_expires
            - mod_ssl
            - mod_setenvif
            - mod_env
            - mod_deflate

      daemon/oneops.1.Daemon:
        httpd:
          service_name: httpd
          pattern: httpd
          use_script_status: true
          control_script_location: /etc/init.d/httpd

      artifact/oneops.1.Artifact:
        display:
          repository: releases
          install_dir: $OO_LOCAL{artifact-dir}
          location: $OO_GLOBAL{DISTBASE}/oneops-display-$OO_LOCAL{version}.tar.gz
          version: $OO_LOCAL{version}
          restart: |-
            home_dir = "$OO_LOCAL{home-dir}"
            base_dir = "#{home_dir}/display"
            dist_dir = "#{home_dir}/dist"

            execute "mkdir -p #{home_dir}"
            execute "rm -fr #{dist_dir}"
            execute "ln -sf $OO_LOCAL{artifact-dir}/releases/$OO_LOCAL{version}/oneops/dist #{dist_dir}"

            execute 'service httpd stop'

            execute "rm -fr #{base_dir}"
            execute "mkdir -p #{base_dir}"

            execute 'extract' do
              command "tar zxf #{dist_dir}/app.tar.gz --no-same-owner --no-same-permissions"
              cwd "#{base_dir}"
            end

            bash 'bundle' do
              code <<-EOA
                bundle config build.pg --with-pg-config=`find / -name pg_config |tail -1`
                bundle install --local --without development
              EOA
              cwd "#{base_dir}"
            end

            display_user = '$OO_LOCAL{run-user}'

            directory "#{base_dir}/log" do
              owner display_user
              group display_user
              mode '0755'
              action :create
            end

            directory "#{base_dir}/tmp/cache" do
              owner display_user
              group display_user
              mode '0755'
              recursive true
              action :create
            end

            execute 'set user permissions for passenger' do
              command "chown -R #{display_user}:#{display_user} config.ru config/environment.rb log tmp"
              cwd "#{base_dir}"
            end

            bash 'assets:clean and assets:precompile' do
              code <<-EOA
                bundle exec rake assets:clean
                bundle exec rake assets:precompile
                bundle exec rake swagger:docs
              EOA
              environment({'RAILS_ENV' => "$OO_GLOBAL{DISPLAY-RAILS-ENV}",
                           'OODB_HOST' => "$OO_LOCAL{display-db-host}",
                           'OODB_DATABASE' => "$OO_GLOBAL{DISPLAY-DB-NAME}",
                           'OODB_USERNAME' => "$OO_GLOBAL{DISPLAY-DB-USERNAME}",
                           'OODB_PASSWORD' => "$OO_GLOBAL{DISPLAY-DB-PASSWORD}"})
              cwd "#{base_dir}"
            end

            execute 'service httpd start'

	    execute 'set user permissions for log dir' do
              command "chown -R #{display_user}:#{display_user} #{base_dir}/log"
	    end

          attachments:
            enable-via-ecv:
              path: $OO_LOCAL{home-dir}/enable-via-ecv
              exec_cmd: rm -f $OO_LOCAL{home-dir}/display/public/shut.down && sleep 30
              priority: '1'
              run_on: on-demand
            disable--via-ecv:
              path: $OO_LOCAL{home-dir}/disable-via-ecv
              exec_cmd: echo "Disable ECV" > $OO_LOCAL{home-dir}/display/public/shut.down && sleep 30
              priority: '1'
              run_on: on-demand

      website/oneops.1.Website:
        website:
          server_name: $OO_LOCAL{hostname}
          directives: |-
            Options Indexes FollowSymLinks MultiViews
            AllowOverride AuthConfig
            Order allow,deny
            allow from all
          port: 443
          ssl: on
          root: $OO_LOCAL{home-dir}/display/public
          extra: |-
            RailsEnv $OO_GLOBAL{DISPLAY-RAILS-ENV}

            PassengerMinInstances $OO_LOCAL{instances}
            PassengerMaxPoolSize $OO_LOCAL{instances}

            SetEnv OODB_HOST "$OO_LOCAL{display-db-host}"
            SetEnv OODB_DATABASE "$OO_GLOBAL{DISPLAY-DB-NAME}"
            SetEnv OODB_USERNAME "$OO_GLOBAL{DISPLAY-DB-USERNAME}"
            SetEnv OODB_PASSWORD "$OO_GLOBAL{DISPLAY-DB-PASSWORD}"

            SetEnv IDENTITY "$OO_LOCAL{hostname}"
            SetEnv OO_HOSTNAME "$OO_LOCAL{hostname}"
            SetEnv SMTP_HOSTNAME "$OO_CLOUD{smtp}"
            SetEnv SENSOR_HEALTH_PATH "components/states"

            SetEnv CMS_SITE "$OO_LOCAL{cms-site}"
            SetEnv TRANSISTOR_SITE "$OO_LOCAL{transistor-site}"
            SetEnv EVENTS_SITE "$OO_LOCAL{events-site}"
            SetEnv NOTIFICATION_SITE "$OO_LOCAL{notifications-site}"
            SetEnv METRICS_SITE "$OO_LOCAL{metrics-site}"
            SetEnv SEARCH_SITE "$OO_LOCAL{search-site}"
            SetEnv LOG_SITE "$OO_LOCAL{log-site}"

            SetEnv POLICY_MANAGEMENT "true"
            SetEnv CHECK_POLICY_COMPLIANCE "true"

            SetEnv ASSET_URL "$OO_LOCAL{asset-url}"
            SetEnv SESSION_INACTIVITY_TIMEOUT "$OO_LOCAL{session-inactivity-timeout}"

            SetEnv FEEDBACK_URL "$OO_LOCAL{feedback-url}"
            SetEnv HELP_URL "$OO_LOCAL{help-url}"
            SetEnv NEWS_URL "$OO_LOCAL{news-url}"
            SetEnv PRIVACY_POLICY_URL "$OO_LOCAL{privacy-policy-url}"
            SetEnv REPORT_PROBLEM_URL "$OO_LOCAL{report-problem-url}"
            SetEnv SUPPORT_CHAT_URL "$OO_LOCAL{support-chat-url}"
            SetEnv TERMS_OF_SERVICE_URL "$OO_LOCAL{terms-of-service-url}"

            SetEnv SUPPORT_AUTH "$OO_LOCAL{support-auth}"
            SetEnv SUPPORT_EMAIL "$OO_LOCAL{support-email}"

            $OO_LOCAL{ldap-config}

            <Directory $OO_LOCAL{home-dir}/display/public>
              Allow from all
              Options -MultiViews
            </Directory>
            <LocationMatch "^/assets/.*$">
              Header unset ETag
              FileETag None
              # RFC says only cache for 1 year
              ExpiresActive On
              ExpiresDefault "access plus 1 year"
            </LocationMatch>
            <LocationMatch "^/images/.*$">
              Header unset ETag
              FileETag None
              ExpiresActive On
              ExpiresDefault "access plus 1 hour"
            </LocationMatch>

      file/oneops.1.File:
        logrotate:
          path: /etc/logrotate.d/oneops-display
          content: |-
            $OO_LOCAL{home-dir}/display/log/*.log
            {
              copytruncate
              daily
              rotate 7
              compress
              missingok
              create 640 $OO_LOCAL{run-user} $OO_LOCAL{run-user}
            }
