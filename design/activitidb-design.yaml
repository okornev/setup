---
variables:

platforms:
 activitidb:
     pack: oneops/postgresql:1
     variables:
        distbase: $OO_GLOBAL{DISTBASE}
        install-dir: $OO_GLOBAL{INSTALL-DIR}
        backup-host: $OO_GLOBAL{BACKUP-HOST}
        activiti-db-pass: $OO_GLOBAL{ACTIVITI-DB-PASS}
        activiti-db-user: $OO_GLOBAL{ACTIVITI-DB-USER}
        activiti-db-name: $OO_GLOBAL{ACTIVITI-DB-NAME}
     components:
       compute/oneops.1.Compute:
          compute:
            size: L
       database/oneops.1.Database:
         database:
           dbname: $OO_LOCAL{activiti-db-name}
           username: $OO_LOCAL{activiti-db-user}
           password: $OO_LOCAL{activiti-db-pass}
       postgresql/oneops.1.Postgresql:
         postgresql:
           port: '5432'
           postgresql_conf:
             tcp_keepalives_count: '5'
             tcp_keepalives_idle: '60'
             tcp_keepalives_interval: '5'
             max_connections: '1000'
           version: '9.2'
       user/oneops.1.User:
        ooadmin:
          home_directory_mode: '755'
          home_directory: /home/ooadmin
          ulimit: '16384'
          username: ooadmin
       volume/oneops.1.Volume:
         volume:
           size: 100%FREE
           mount_point: /db
           fstype: xfs
       file/oneops.1.File:
         pg-snapshot-chef-conf:
           path: /home/ooadmin/chef.conf
           content: |
            cookbook_path "/home/oneops/components/cookbooks"
            lockfile "/tmp/chef-snapshot.lock"
            file_cache_path "/tmp"
            log_level :info
         pg-snapshot-json:
           path: /home/ooadmin/pg.snapshot.json
           exec_cmd: mkdir -p /db/backups/outbound
           content: |
               {
                 "mgmt_domain": "",
                 "customer_domain": "",
                 "run_list": [
                   "recipe[postgresql::snapshot]"
                 ],
                 "workorder": {
                   "ci": {
                     "ciAttributes": {
                       "postgresql_conf": "{\"data_directory\":\"\u0027/db/pg\u0027\"}"
                     },
                     "ciName": "pg",
                     "ciClassName": "bom.Postgresql"
                   },
                   "payLoad": {
                     "Environment" : [ { "ciName" : "$OO_GLOBAL{env_name}" } ]
                   },
                   "arglist": "{\"bucket\":\"db-backup\",\"label\":\"$OO_GLOBAL{env_name}-activitidb\",\"local_path\":\"/db/backups/outbound\"}"
                 },
                 "name": "pg",
                 "postgresql": {
                   "postgresql_conf": "{\"data_directory\":\"\u0027/db/pg\u0027\"}"
                 },
                 "app_name": "postgresql"
               }
           depends:
           - pg-snapshot-wrapper
         pg-snapshot-wrapper:
           path: /home/ooadmin/pg-snapshot-wrapper.sh
           exec_cmd: chmod +x /home/ooadmin/pg-snapshot-wrapper.sh
           content: |
               #!/bin/bash

               # xargs to trim
               is_standby=`sudo -u postgres psql -t -c "SELECT pg_is_in_recovery();"|xargs`

               echo "is_standby=$is_standby"
               if [ $is_standby = "t" ]; then
                 echo "skipping because is standby"
                 exit
               fi

               /usr/bin/chef-solo -c /home/ooadmin/chef.conf -j /home/ooadmin/pg.snapshot.json 2>&1 >/dev/null ; scp /db/backups/outbound/snapshot* ooadmin@$OO_LOCAL{backup-host}:~/backup/  ; rm -fr /db/backups/outbound/snapshot*

           depends:
           - pg-snapshot-chef-conf
       job/oneops.1.Job:
         full-backup-job:
           month: '*'
           hour: '*/4'
           weekday: '*'
           description: full-backup-job
           cmd: /home/ooadmin/pg-snapshot-wrapper.sh
           user: root
           day: '*'
           minute: '12'
       lb/oneops.1.Lb:
         lb:
          listeners:
            - tcp 5432 tcp 5432
          ecv_map:
            '5432': GET /NOTUSED
